# 맵을 코드에 맞게 변환하는 코드(베릴로그 코드 작성을 위한 코드)

a = [
    "1111111100000001000000010001000100010001000100000001000011111111",
    "0000011100000100000001000001110000110000001000001110000010000000",
    "0000011100000100000001000001110000110000001000001110000000000000",
    "0000011100000100000001000001110000110000001000000110000000000000",
    "0000011100000100000001000001110000110000001000000010000000000000",
    "0000011100000100000001000001110000110000001000000000000000000000",
    "0000011100000100000001000001110000110000000000000000000000000000",
    "0000011100000100000001000001110000010000000000000000000000000000",
    "0000011100000100000001000001110000000000000000000000000000000000",
    "0000011100000100000001000000110000000000000000000000000000000000",
    "0000011100000100000001000000010000000000000000000000000000000000",
    "0000011100000100000001000000000000000000000000000000000000000000",
    "0000011100000100000000000000000000000000000000000000000000000000",
    "0000011100000000000000000000000000000000000000000000000000000000",
    "0000001100000000000000000000000000000000000000000000000000000000",
    "0000000100000000000000000000000000000000000000000000000000000000",
    "0001100000100100010000101111111101000010010000100101101001011010"
]

def reverse_list(lst):
    return lst[::-1]


newlist = []
final_list = []
for i in range(64):
    newllist = []
    
    for j in range(len(a)):
        newllist.append(a[j][i])
        if j == len(a)-1:
            save = a[j][i]
        
    
    
    for num in range(15):
        newllist.append(save)

    newlist.append(newllist)
    

for i in newlist:
    final = reverse_list(i)
    final_list.append(final)

    



# Format and print the result with 'assign' statements
for idx, i in enumerate(final_list):
    binary_str = "".join(i)
    high_idx = idx // 8
    low_idx = idx % 8
    print(f"assign data_input{high_idx}{low_idx:01d} = 32'b{binary_str};")
